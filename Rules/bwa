rule binCoverage2:
    input:
        bins = "/c3se/NOBACKUP/users/zorrilla/binning/metabolismPipe/bins_organized/",
        qfiltered = "/c3se/users/zorrilla/Vera/binningBackup/perSamplePipe/qfiltered/{ref}"
    output:
        "binCoverage2/{ref}.fa/map.stats"
    message:
        """
        For each sample maps qfiltered reads to all bins concatenated using samtools.
        """
    shell:
        """
        cd {config[paths][concoct_run]}
        mkdir -p binCoverage2
        cd binCoverage2
        mkdir -p $(basename ${input.qfiltered})
        cd $TMPDIR
        cp {input.bins}$(basename {input.qfiltered})/* .
        cat ERR*.fa > $(basename {input.qfiltered}).fa
        cp {input.qfiltered}/*.gz .
        bwa index $(basename {input.qfiltered}).fa
        bwa mem -t 16 $(basename {input.qfiltered}).fa $(echo *_1.fastq.gz) $(echo *_2.fastq.gz) > $(basename {input.qfiltered}).sam
        samtools view -@ 16 -Sb $(basename {input.qfiltered}).sam > $(basename {input.qfiltered}).bam
        samtools sort -@ 16 $(basename {input.qfiltered}).bam > $(basename {input.qfiltered}).sort
        samtools flagstat $(basename {input.qfiltered}).sort > map.stats
        cp map.stats {config[paths][concoct_run]}/binCoverage2/$(basename {input.qfiltered})
        cd {config[paths][concoct_run]}
        """

rule binCoverage3:
    input:
        bins = "/c3se/NOBACKUP/users/zorrilla/binning/metabolismPipe/bins_organized/{ref}",
        qfiltered = "/c3se/users/zorrilla/Vera/binningBackup/perSamplePipe/qfiltered/{ref}"
    output:
        "binCoverage3/{ref}"
    message:
        """
        This rule generates X & Y in the equation below. Z is generated by rule binCoverage2.

        To calculate bin fraction abundance estimate given:

        X = # of reads mapped to bin_i by mapping qfiltered reads to bin_i using samtools.
        Y = length of bin_i.
        Z = total # of reads mapped to all bins in sample_k

        binAbundanceFraction = (X / Y / Z)*100

        NOTES:
        binAbundance is calculated in rule binFraction below.
        Requires {input.bins} folder to be organized into per sample subfolders.
        """
    shell:
        """
        cd {config[paths][concoct_run]}
        mkdir -p binCoverage3
        cd binCoverage3
        mkdir -p $(basename ${input.qfiltered})
        cd $TMPDIR
        cp {input.bins}/* {input.qfiltered}/*.gz .
        for bin in ERR*.fa;do
            mkdir -p $(echo "$bin"| sed "s/.fa//")
            cp  $bin $(echo "$bin"| sed "s/.fa//")
            cd $(echo "$bin"| sed "s/.fa//")
            bwa index $bin
            bwa mem -t 16 $bin $(echo "$TMPDIR/$bin"| sed "s/_.*$/_1.fastq.gz/") $(echo "$TMPDIR/$bin"| sed "s/_.*$/_2.fastq.gz/") > $(echo "$bin"|sed "s/.fa/.sam/")
            samtools view -@ 16 -Sb $(echo "$bin"|sed "s/.fa/.sam/") > $(echo "$bin"|sed "s/.fa/.bam/")
            samtools sort -@ 16 $(echo "$bin"|sed "s/.fa/.bam/") > $(echo "$bin"|sed "s/.fa/.sort/")
            samtools flagstat $(echo "$bin"|sed "s/.fa/.sort/") > $(echo "$bin"|sed "s/.fa/.map/")
            echo -n "Bin Length = " >> $(echo "$bin"|sed "s/.fa/.map/")
            less $bin|grep len| awk -F' ' '{{print $NF}}'|sed 's/len=//'|awk '{{sum+=$NF;}}END{{print sum;}}' >> $(echo "$bin"|sed "s/.fa/.map/")
            cp *.map {config[paths][concoct_run]}/binCoverage3/$(basename ${input.qfiltered})
            cd ..
            rm -r $(echo "$bin"| sed "s/.fa//")
        done
        """

rule binFraction:
    input:
    output:
    message:
        """
        Calculate bin abundance fraction using output of binCoverage2 & binCoverage3:

        X = # of reads mapped to bin_i by mapping qfiltered reads to bin_i using samtools.
        Y = length of bin_i.
        Z = total # of reads mapped to all bins in sample_k

        binAbundanceFraction = (X / Y / Z)*100


        """
    shell:
        """
        cd /c3se/NOBACKUP/users/zorrilla/binning/perSamplePipe/binCoverage3/
        for sample in ERR*;do
            cd $sample
            for bin in ERR*.map;do
                echo -n "$bin" >> binAbundance.fraction
                echo -n $'\t' >> binAbundance.fraction
                X=$(less $bin|grep "mapped ("|awk -F' ' '{print $1}')
                Y=$(less $bin|tail -n 1|awk -F' ' '{print $4}')
                Z=$(less "/c3se/NOBACKUP/users/zorrilla/binning/perSamplePipe/binCoverage2/$sample/map.stats"|grep "mapped ("|awk -F' ' '{print $1}')
                awk -v x="$X" -v y="$Y" -v z="$Z" 'BEGIN{print (x/y/z) * 100}' >> binAbundance.fraction
            done
            cd ..
        done
        """
