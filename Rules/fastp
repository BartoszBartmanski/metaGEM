import os
import glob

R1 = sorted([os.path.splitext(val)[0] for val in (glob.glob('/c3se/NOBACKUP/groups/c3-c3se605-19-1/pipeTest/reads/sra/ERR*'))]) #For sample names
#R1 = sorted([os.path.splitext(val)[0] for val in (glob.glob('/c3se/NOBACKUP/users/zorrilla/binning/metabolismPipe/bins_organized/*.fa'))]) #For bin names

R12 = [os.path.splitext(val)[0] for val in R1] #removes filepath (i.e. /c3se/NOBACKUP/groups/c3-c3se605-19-1/pipeTest/reads/sra/)
names = [os.path.basename(val) for val in R12] #removes extension (i.e. .fa)
names = [x[:-2] for x in names] #removes paired end information (i.e. _1 or _2)
ref = list(dict.fromkeys(names)) #removes duplicates for sample names, since there are two files with same sample ID (i.e. _1 or _2)

rule qfilter:
    input:
        R1=config["paths"]["raw_reads"]+"/{ref}_1.fastq.gz",
        R2=config["paths"]["raw_reads"]+"/{ref}_2.fastq.gz"
    output:
        R1="qfiltered/{ref}/{ref}_1.fastq.gz",
        R2="qfiltered/{ref}/{ref}_2.fastq.gz"
    shell:
        """
        fastp --thread 8 -i {input.R1} -I {input.R2} -o {output.R1} -O {output.R2} -j $(dirname {output.R1})/$(echo $( basename $(dirname {output.R1}))).json -h $(dirname {output.R1})/$(echo $( basename $(dirname {output.R1}))).html
        """