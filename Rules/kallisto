rule kallistoBuild:
    input:
        "contigs/{ref}/megahit_c10K.fa"
    output:
        "quantification/kallistoIndices/{ref}.kaix"
    shell:
        """
        set +u;source activate checkm_env;set -u;
        kallisto index {input} -i {output}
        """

rule gatherIndexes:
    input:
        expand("quantification/kallistoIndices/{ref}.kaix", ref = names)
    output:
        "quantification/kallistoIndices/indexDummy.txt"
    shell:
        """
        touch {output}
        """

rule kallistoQuant:
    input:
        R1=config["paths"]["concoct_run"]+"/qfiltered/{names}/{names}_1.fastq.gz",
        R2=config["paths"]["concoct_run"]+"/qfiltered/{names}/{names}_2.fastq.gz",
        index="quantification/kallistoIndices/{ref}.kaix",
        indexDummy="quantification/kallistoIndices/indexDummy.txt",
    output:
        "quantification/ref_{ref}/{names}/abundance.tsv.gz"
    shell:
        """
        set +u;source activate checkm_env;set -u;
        cd $TMPDIR
        kallisto quant --threads {config[kallisto_params][threads]} --plaintext -i {config[paths][concoct_run]}/{input.index} -o $TMPDIR {input.R1} {input.R2}
        gzip abundance.tsv
        cp $(basename {output}) {config[paths][concoct_run]}/$(dirname {output})
        cp run_info.json {config[paths][concoct_run]}/$(dirname {output})
        rm $(basename {output})
        rm run_info.json
        cd {config[paths][concoct_run]}
        """

rule gatherAbundance:
    input:
        expand("quantification/ref_{ref}/{names}/abundance.tsv.gz",ref=names, names=names)
    output:
        "quantification/quantDummy.txt"
    shell:
        """
        touch {output}
        """
